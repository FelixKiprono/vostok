<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="progress.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="processtask.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>